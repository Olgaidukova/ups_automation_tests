plugins {
    id 'java-library'
    id "io.qameta.allure" version "2.11.2"
    id "io.freefair.lombok" version "6.0.0-m2"
}

def allureVersion = "2.19.0",
    slf4jVersion = "1.7.32"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation (
            'com.codeborne:selenide:6.11.2',
            'org.junit.jupiter:junit-jupiter:5.9.2',
            'org.assertj:assertj-core:3.24.2',
            'com.codeborne:pdf-test:1.5.0',
            'com.codeborne:xls-test:1.4.3',
            'com.opencsv:opencsv:5.7.1',
            'io.qameta.allure:allure-selenide:2.17.3',
            'com.github.javafaker:javafaker:1.0.2',
            "io.appium:java-client:8.3.0",
            'org.aeonbits.owner:owner:1.0.12',
            "io.rest-assured:rest-assured:5.3.0",
            "commons-io:commons-io:2.11.0",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "com.fasterxml.jackson.core:jackson-databind:2.14.2",
            "org.slf4j:slf4j-simple:$slf4jVersion"
    )
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

test {
    useJUnitPlatform()
}

tasks.withType(Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

task run_tests(type: Test) {
    useJUnitPlatform{
        includeTags("Jenkins")
    }
}
task api_tests(type: Test) {
    useJUnitPlatform{
        includeTags("Api")
    }
}